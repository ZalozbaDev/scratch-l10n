{
  "boost.color.any": {
    "message": "libovolná barva",
    "description": "any color"
  },
  "boost.color.black": {
    "message": "černá",
    "description": "the color black"
  },
  "boost.color.blue": {
    "message": "modrá",
    "description": "the color blue"
  },
  "boost.color.green": {
    "message": "zelená",
    "description": "the color green"
  },
  "boost.color.red": {
    "message": "červená",
    "description": "the color red"
  },
  "boost.color.white": {
    "message": "bílá",
    "description": ""
  },
  "boost.color.yellow": {
    "message": "žlutá",
    "description": "the color yellow"
  },
  "boost.getMotorPosition": {
    "message": "pozice motoru [MOTOR_REPORTER_ID]",
    "description": "the position returned by the motor"
  },
  "boost.getTiltAngle": {
    "message": "úhel náklonu [TILT_DIRECTION]",
    "description": "the angle returned by the tilt sensor"
  },
  "boost.motorDirection.backward": {
    "message": "jinak",
    "description": "label for backward element in motor direction menu for LEGO Boost extension"
  },
  "boost.motorDirection.forward": {
    "message": "takto",
    "description": "label for forward element in motor direction menu for LEGO Boost extension"
  },
  "boost.motorDirection.reverse": {
    "message": "pozpátku",
    "description": "label for reverse element in motor direction menu for LEGO Boost extension"
  },
  "boost.motorOff": {
    "message": "vypni motor [MOTOR_ID]",
    "description": "turn a motor off"
  },
  "boost.motorOn": {
    "message": "zapni motor [MOTOR_ID]",
    "description": "turn a motor on indefinitely"
  },
  "boost.motorOnFor": {
    "message": "zapni motor [MOTOR_ID] na [DURATION] sekundy",
    "description": "turn a motor on for some time"
  },
  "boost.motorOnForRotation": {
    "message": "zapni motor [MOTOR_ID] na [ROTATION] otočky",
    "description": "turn a motor on for rotation"
  },
  "boost.seeingColor": {
    "message": "je vidět [COLOR] cihla?",
    "description": "is the color sensor seeing a certain color?"
  },
  "boost.setLightHue": {
    "message": "nastav barvu světla na [HUE]",
    "description": "set the LED color"
  },
  "boost.setMotorDirection": {
    "message": "nastav směr motoru [MOTOR_ID] na [MOTOR_DIRECTION]",
    "description": "set the motor's turn direction without turning it on"
  },
  "boost.setMotorPower": {
    "message": "nastav rychlost motoru [MOTOR_ID] na [POWER] %",
    "description": "set the motor's speed without turning it on"
  },
  "boost.tiltDirection.any": {
    "message": "libovolný",
    "description": "label for any element in tilt direction menu for LEGO Boost extension"
  },
  "boost.tiltDirection.down": {
    "message": "dolů",
    "description": "label for down element in tilt direction menu for LEGO Boost extension"
  },
  "boost.tiltDirection.left": {
    "message": "vlevo",
    "description": "label for left element in tilt direction menu for LEGO Boost extension"
  },
  "boost.tiltDirection.right": {
    "message": "vpravo",
    "description": "label for right element in tilt direction menu for LEGO Boost extension"
  },
  "boost.tiltDirection.up": {
    "message": "nahoru",
    "description": "label for up element in tilt direction menu for LEGO Boost extension"
  },
  "boost.whenColor": {
    "message": "když je vidět [COLOR] cihla",
    "description": "check for when color"
  },
  "boost.whenTilted": {
    "message": "když nakloněný [TILT_DIRECTION_ANY]",
    "description": "check when tilted in a certain direction"
  },
  "ev3.beepNote": {
    "message": "hraj notu [NOTE] příštích [TIME] sekund",
    "description": "play some note on EV3 for some time"
  },
  "ev3.buttonPressed": {
    "message": "je tlačítko [PORT] stisknuto?",
    "description": "is a button on some port pressed?"
  },
  "ev3.getBrightness": {
    "message": "jas",
    "description": "gets measured brightness"
  },
  "ev3.getDistance": {
    "message": "vzdálenost",
    "description": "gets measured distance"
  },
  "ev3.getMotorPosition": {
    "message": "pozice motoru [PORT]",
    "description": "get the measured degrees a motor has turned"
  },
  "ev3.motorSetPower": {
    "message": "nastav motoru [PORT] rychlost [POWER] %",
    "description": "set a motor's power to some value"
  },
  "ev3.motorTurnClockwise": {
    "message": "toč motorem [PORT] ve směru hodin [TIME] sekund",
    "description": "turn a motor clockwise for some time"
  },
  "ev3.motorTurnCounterClockwise": {
    "message": "toč motorem [PORT] proti směru hodin [TIME] sekund",
    "description": "turn a motor counter-clockwise for some time"
  },
  "ev3.whenBrightnessLessThan": {
    "message": "když je jas < [DISTANCE]",
    "description": "when value measured by brightness sensor is less than some value"
  },
  "ev3.whenButtonPressed": {
    "message": "po stisku tlačítka [PORT]",
    "description": "when a button connected to a port is pressed"
  },
  "ev3.whenDistanceLessThan": {
    "message": "když vzdálenost < [DISTANCE]",
    "description": "when the value measured by the distance sensor is less than some value"
  },
  "gdxfor.getAcceleration": {
    "message": "zrychlení [DIRECTION]",
    "description": "gets acceleration"
  },
  "gdxfor.getForce": {
    "message": "síla",
    "description": "gets force"
  },
  "gdxfor.getSpin": {
    "message": "rychlost otáčení [DIRECTION]",
    "description": "gets spin speed"
  },
  "gdxfor.getTilt": {
    "message": "úhel náklonu [TILT]",
    "description": "gets tilt"
  },
  "gdxfor.isFreeFalling": {
    "message": "padá?",
    "description": "is the device in free fall?"
  },
  "gdxfor.isTilted": {
    "message": "nakloněné [TILT]?",
    "description": "is the device tilted?"
  },
  "gdxfor.pulled": {
    "message": "tažený",
    "description": "the force sensor was pulled outward"
  },
  "gdxfor.pushed": {
    "message": "tlačený",
    "description": "the force sensor was pushed inward"
  },
  "gdxfor.shaken": {
    "message": "se třese",
    "description": "the sensor was shaken"
  },
  "gdxfor.startedFalling": {
    "message": "počátek pádu",
    "description": "the sensor started free falling"
  },
  "gdxfor.tiltDirectionMenu.any": {
    "message": "libovolný",
    "description": "label for any direction element in tilt direction picker for gdxfor extension"
  },
  "gdxfor.tiltDirectionMenu.back": {
    "message": "dozadu",
    "description": "label for back element in tilt direction picker for gdxfor extension"
  },
  "gdxfor.tiltDirectionMenu.front": {
    "message": "dopředu",
    "description": "label for front element in tilt direction picker for gdxfor extension"
  },
  "gdxfor.tiltDirectionMenu.left": {
    "message": "vlevo",
    "description": "label for left element in tilt direction picker for gdxfor extension"
  },
  "gdxfor.tiltDirectionMenu.right": {
    "message": "vpravo",
    "description": "label for right element in tilt direction picker for gdxfor extension"
  },
  "gdxfor.turnedFaceDown": {
    "message": "otočený lícem dolů",
    "description": "the sensor was turned to face down"
  },
  "gdxfor.turnedFaceUp": {
    "message": "otočený lícem nahoru",
    "description": "the sensor was turned to face up"
  },
  "gdxfor.whenForcePushedOrPulled": {
    "message": "když senzor síly [PUSH_PULL]",
    "description": "when the force sensor is pushed or pulled"
  },
  "gdxfor.whenGesture": {
    "message": "když [GESTURE]",
    "description": "when the sensor detects a gesture"
  },
  "gdxfor.whenTilted": {
    "message": "když nakloněný [TILT]",
    "description": "when the sensor detects tilt"
  },
  "makeymakey.downArrow": {
    "message": "šipka dolů",
    "description": "The down arrow key on a computer keyboard."
  },
  "makeymakey.downArrowShort": {
    "message": "dolů",
    "description": "Short name for the down arrow key on a computer keyboard."
  },
  "makeymakey.leftArrow": {
    "message": "šipka vlevo",
    "description": "The left arrow key on a computer keyboard."
  },
  "makeymakey.leftArrowShort": {
    "message": "vlevo",
    "description": "Short name for the left arrow key on a computer keyboard."
  },
  "makeymakey.rightArrow": {
    "message": "šipka vpravo",
    "description": "The right arrow key on a computer keyboard."
  },
  "makeymakey.rightArrowShort": {
    "message": "vpravo",
    "description": "Short name for the right arrow key on a computer keyboard."
  },
  "makeymakey.spaceKey": {
    "message": "mezerník",
    "description": "The space key on a computer keyboard."
  },
  "makeymakey.upArrow": {
    "message": "šipka nahoru",
    "description": "The up arrow key on a computer keyboard."
  },
  "makeymakey.upArrowShort": {
    "message": "nahoru",
    "description": "Short name for the up arrow key on a computer keyboard."
  },
  "makeymakey.whenKeyPressed": {
    "message": "když je stisknuta klávesa [KEY]",
    "description": "when a keyboard key is pressed"
  },
  "makeymakey.whenKeysPressedInOrder": {
    "message": "když [SEQUENCE] stisknuto postupně",
    "description": "when a sequence of keyboard keys is pressed in a specific order"
  },
  "microbit.buttonsMenu.any": {
    "message": "libovolný",
    "description": "label for \"any\" element in button picker for micro:bit extension"
  },
  "microbit.clearDisplay": {
    "message": "smaž displej",
    "description": "display nothing on the micro:bit display"
  },
  "microbit.defaultTextToDisplay": {
    "message": "Ahoj!",
    "description": "default text to display.\n                                IMPORTANT - the micro:bit only supports letters a-z, A-Z.\n                                Please substitute a default word in your language\n                                that can be written with those characters,\n                                substitute non-accented characters or leave it as \"Hello!\".\n                                Check the micro:bit site documentation for details"
  },
  "microbit.displaySymbol": {
    "message": "zobraz [MATRIX]",
    "description": "display a pattern on the micro:bit display"
  },
  "microbit.displayText": {
    "message": "displej textu [TEXT]",
    "description": "display text on the micro:bit display"
  },
  "microbit.gesturesMenu.jumped": {
    "message": "poskočí",
    "description": "label for jumped gesture in gesture picker for micro:bit extension"
  },
  "microbit.gesturesMenu.moved": {
    "message": "se pohne",
    "description": "label for moved gesture in gesture picker for micro:bit extension"
  },
  "microbit.gesturesMenu.shaken": {
    "message": "se zatřese",
    "description": "label for shaken gesture in gesture picker for micro:bit extension"
  },
  "microbit.isButtonPressed": {
    "message": "tlačítko [BTN] stisknuto?",
    "description": "is the selected button on the micro:bit pressed?"
  },
  "microbit.isTilted": {
    "message": "nakloněno [DIRECTION]?",
    "description": "is the micro:bit is tilted in a direction?"
  },
  "microbit.pinStateMenu.off": {
    "message": "vypnuto",
    "description": "label for off element in pin state picker for micro:bit extension"
  },
  "microbit.pinStateMenu.on": {
    "message": "zapnuto",
    "description": "label for on element in pin state picker for micro:bit extension"
  },
  "microbit.tiltAngle": {
    "message": "úhel náklonu [DIRECTION]",
    "description": "how much the micro:bit is tilted in a direction"
  },
  "microbit.tiltDirectionMenu.any": {
    "message": "libovolně",
    "description": "label for any direction element in tilt direction picker for micro:bit extension"
  },
  "microbit.tiltDirectionMenu.back": {
    "message": "dozadu",
    "description": "label for back element in tilt direction picker for micro:bit extension"
  },
  "microbit.tiltDirectionMenu.front": {
    "message": "dopředu",
    "description": "label for front element in tilt direction picker for micro:bit extension"
  },
  "microbit.tiltDirectionMenu.left": {
    "message": "vlevo",
    "description": "label for left element in tilt direction picker for micro:bit extension"
  },
  "microbit.tiltDirectionMenu.right": {
    "message": "vpravo",
    "description": "label for right element in tilt direction picker for micro:bit extension"
  },
  "microbit.whenButtonPressed": {
    "message": "po stisku tlačítka [BTN]",
    "description": "when the selected button on the micro:bit is pressed"
  },
  "microbit.whenGesture": {
    "message": "když [GESTURE]",
    "description": "when the selected gesture is detected by the micro:bit"
  },
  "microbit.whenPinConnected": {
    "message": "když je pin [PIN] propojený",
    "description": "when the pin detects a connection to Earth/Ground"
  },
  "microbit.whenTilted": {
    "message": "když nakloněný [DIRECTION]",
    "description": "when the micro:bit is tilted in a direction"
  },
  "music.categoryName": {
    "message": "Hudba",
    "description": "Label for the Music extension category"
  },
  "music.changeTempo": {
    "message": "změň tempo o [TEMPO]",
    "description": "change tempo (speed) for notes, drums, and rests played"
  },
  "music.drumBass": {
    "message": "(2) Velký buben",
    "description": "Sound of bass drum as used in a standard drum kit"
  },
  "music.drumBongo": {
    "message": "(13) Bongo",
    "description": "Sound of a bongo being struck"
  },
  "music.drumCabasa": {
    "message": "(15) Kabasa",
    "description": "Sound of a cabasa being shaken"
  },
  "music.drumClaves": {
    "message": "(9) Claves",
    "description": "Sound of claves being struck together"
  },
  "music.drumClosedHiHat": {
    "message": "(6) Uzavřený hi-hat",
    "description": "Sound of a drum stick hitting a hi-hat while closed"
  },
  "music.drumConga": {
    "message": "(14) Konga",
    "description": "Sound of a conga being struck"
  },
  "music.drumCowbell": {
    "message": "(11) Kravský zvonec",
    "description": "Sound of a cowbell being struck"
  },
  "music.drumCrashCymbal": {
    "message": "(4) Crash činel",
    "description": "Sound of a drum stick hitting a crash cymbal"
  },
  "music.drumCuica": {
    "message": "(18) Cuica",
    "description": "Sound of a cuica being played"
  },
  "music.drumGuiro": {
    "message": "(16) Guiro",
    "description": "Sound of a guiro being played"
  },
  "music.drumHandClap": {
    "message": "(8) Tlesknutí",
    "description": "Sound of two hands clapping together"
  },
  "music.drumOpenHiHat": {
    "message": "(5) Otevřený hi-hat",
    "description": "Sound of a drum stick hitting a hi-hat while open"
  },
  "music.drumSideStick": {
    "message": "(3) Okraj bubínku",
    "description": "Sound of a drum stick hitting the side of a drum (usually the snare)"
  },
  "music.drumSnare": {
    "message": "(1) Malý bubínek virbl",
    "description": "Sound of snare drum as used in a standard drum kit"
  },
  "music.drumTambourine": {
    "message": "(7) Tamburína",
    "description": "Sound of a tambourine being struck"
  },
  "music.drumTriangle": {
    "message": "(12) Triangl",
    "description": "Sound of a triangle (instrument) being struck"
  },
  "music.drumVibraslap": {
    "message": "(17) Vibraslap",
    "description": "Sound of a Vibraslap being played"
  },
  "music.drumWoodBlock": {
    "message": "(10) Dřevěný blok",
    "description": "Sound of a wood block being struck"
  },
  "music.getTempo": {
    "message": "tempo",
    "description": "get the current tempo (speed) for notes, drums, and rests played"
  },
  "music.instrumentBass": {
    "message": "(6) Kontrabas",
    "description": "Sound of an accoustic upright bass"
  },
  "music.instrumentBassoon": {
    "message": "(14) Fagot",
    "description": "Sound of a bassoon being played"
  },
  "music.instrumentCello": {
    "message": "(8) Violoncello",
    "description": "Sound of a cello being played with a bow"
  },
  "music.instrumentChoir": {
    "message": "(15) Sbor",
    "description": "Sound of a choir singing"
  },
  "music.instrumentClarinet": {
    "message": "(10) Klarinet",
    "description": "Sound of a clarinet being played"
  },
  "music.instrumentElectricGuitar": {
    "message": "(5) Elektronická kytara",
    "description": "Sound of an electric guitar"
  },
  "music.instrumentElectricPiano": {
    "message": "(2) Elektronické piáno",
    "description": "Sound of an electric piano"
  },
  "music.instrumentFlute": {
    "message": "(12) Flétna",
    "description": "Sound of a flute being played"
  },
  "music.instrumentGuitar": {
    "message": "(4) Kytara",
    "description": "Sound of an accoustic guitar"
  },
  "music.instrumentMarimba": {
    "message": "(19) Marimba",
    "description": "Sound of a marimba being struck"
  },
  "music.instrumentMusicBox": {
    "message": "(17) Hrací skříňka",
    "description": "Sound of a music box playing"
  },
  "music.instrumentOrgan": {
    "message": "(3) Varhany",
    "description": "Sound of an organ"
  },
  "music.instrumentPiano": {
    "message": "(1) Piáno",
    "description": "Sound of a piano"
  },
  "music.instrumentPizzicato": {
    "message": "(7) Drnkání prstem",
    "description": "Sound of a string instrument (e.g. violin) being plucked"
  },
  "music.instrumentSaxophone": {
    "message": "(11) Saxofon",
    "description": "Sound of a saxophone being played"
  },
  "music.instrumentSteelDrum": {
    "message": "(18) Ocelový buben",
    "description": "Sound of a steel drum being struck"
  },
  "music.instrumentSynthLead": {
    "message": "(20) Syntetizátor sólo",
    "description": "Sound of a \"lead\" synthesizer being played"
  },
  "music.instrumentSynthPad": {
    "message": "(21) Syntetizátor pozadí",
    "description": "Sound of a \"pad\" synthesizer being played"
  },
  "music.instrumentTrombone": {
    "message": "(9) Trombón",
    "description": "Sound of a trombone being played"
  },
  "music.instrumentVibraphone": {
    "message": "(16) Vibrafon",
    "description": "Sound of a vibraphone being struck"
  },
  "music.instrumentWoodenFlute": {
    "message": "(13) Dřevěná flétna",
    "description": "Sound of a wooden flute being played"
  },
  "music.midiPlayDrumForBeats": {
    "message": "bubnuj [DRUM] příštích [BEATS] taktů",
    "description": "play drum sample for a number of beats according to a mapping of MIDI codes"
  },
  "music.midiSetInstrument": {
    "message": "nastav nástroj na [INSTRUMENT]",
    "description": "set the instrument for notes played according to a mapping of MIDI codes"
  },
  "music.playDrumForBeats": {
    "message": "bubnuj [DRUM] příštích [BEATS] taktů",
    "description": "play drum sample for a number of beats"
  },
  "music.playNoteForBeats": {
    "message": "hraj notu [NOTE] příštích [BEATS] taktů",
    "description": "play a note for a number of beats"
  },
  "music.restForBeats": {
    "message": "pauza [BEATS] taktů",
    "description": "rest (play no sound) for a number of beats"
  },
  "music.setInstrument": {
    "message": "nastav nástroj na [INSTRUMENT]",
    "description": "set the instrument (e.g. piano, guitar, trombone) for notes played"
  },
  "music.setTempo": {
    "message": "nastav tempo na [TEMPO]",
    "description": "set tempo (speed) for notes, drums, and rests played"
  },
  "pen.categoryName": {
    "message": "Pero",
    "description": "Label for the pen extension category"
  },
  "pen.changeColorParam": {
    "message": "změň [COLOR_PARAM] pera o [VALUE]",
    "description": "change the state of a pen color parameter"
  },
  "pen.changeHue": {
    "message": "změň barvu pera o [HUE]",
    "description": "legacy pen blocks - change pen color"
  },
  "pen.changeShade": {
    "message": "změň odstín pera o [SHADE]",
    "description": "legacy pen blocks - change pen shade"
  },
  "pen.changeSize": {
    "message": "změň tloušťku pera o [SIZE]",
    "description": "change the diameter of the trail left by a sprite"
  },
  "pen.clear": {
    "message": "smaž",
    "description": "erase all pen trails and stamps"
  },
  "pen.colorMenu.brightness": {
    "message": "jas",
    "description": "label for brightness element in color picker for pen extension"
  },
  "pen.colorMenu.color": {
    "message": "barva",
    "description": "label for color element in color picker for pen extension"
  },
  "pen.colorMenu.saturation": {
    "message": "sytost",
    "description": "label for saturation element in color picker for pen extension"
  },
  "pen.colorMenu.transparency": {
    "message": "průhlednost",
    "description": "label for transparency element in color picker for pen extension"
  },
  "pen.penDown": {
    "message": "pero zapni",
    "description": "start leaving a trail when the sprite moves"
  },
  "pen.penUp": {
    "message": "pero vypni",
    "description": "stop leaving a trail behind the sprite"
  },
  "pen.setColor": {
    "message": "nastav barvu pera na [COLOR]",
    "description": "set the pen color to a particular (RGB) value"
  },
  "pen.setColorParam": {
    "message": "nastav [COLOR_PARAM] pera na [VALUE]",
    "description": "set the state for a pen color parameter e.g. saturation"
  },
  "pen.setHue": {
    "message": "nastav barvu pera na [HUE]",
    "description": "legacy pen blocks - set pen color to number"
  },
  "pen.setShade": {
    "message": "nastav odstín pera na [SHADE]",
    "description": "legacy pen blocks - set pen shade"
  },
  "pen.setSize": {
    "message": "nastav tloušťku pera na [SIZE]",
    "description": "set the diameter of a trail left by a sprite"
  },
  "pen.stamp": {
    "message": "otiskni se",
    "description": "render current costume on the background"
  },
  "speech.defaultWhenIHearValue": {
    "message": "do toho",
    "description": "The default phrase/word that, when heard, triggers the event."
  },
  "speech.extensionName": {
    "message": "Převod řeči na text",
    "description": "Name of extension that adds speech recognition blocks."
  },
  "speech.listenAndWait": {
    "message": "poslouchej a čekej",
    "description": "Start listening to the microphone and wait for a result from the speech recognition system."
  },
  "speech.speechReporter": {
    "message": "řeč",
    "description": "Get the text of spoken words transcribed by the speech recognition system."
  },
  "speech.whenIHear": {
    "message": "když slyším [PHRASE]",
    "description": "Event that triggers when the text entered on the block is recognized by the speech recognition system."
  },
  "text2speech.alto": {
    "message": "alt",
    "description": "Name for a voice with ambiguous gender."
  },
  "text2speech.categoryName": {
    "message": "Text na hlas",
    "description": "Name of the Text to Speech extension."
  },
  "text2speech.defaultTextToSpeak": {
    "message": "ahoj",
    "description": "hello: the default text to speak"
  },
  "text2speech.giant": {
    "message": "obr",
    "description": "Name for a funny voice with a low pitch."
  },
  "text2speech.kitten": {
    "message": "kotě",
    "description": "A baby cat."
  },
  "text2speech.setLanguageBlock": {
    "message": "nastav jazyk na [LANGUAGE]",
    "description": "Set the language for speech synthesis."
  },
  "text2speech.setVoiceBlock": {
    "message": "nastav hlas na [VOICE]",
    "description": "Set the voice for speech synthesis."
  },
  "text2speech.speakAndWaitBlock": {
    "message": "řekni [WORDS]",
    "description": "Speak some words."
  },
  "text2speech.squeak": {
    "message": "kvik",
    "description": "Name for a funny voice with a high pitch."
  },
  "text2speech.tenor": {
    "message": "tenor",
    "description": "Name for a voice with ambiguous gender."
  },
  "translate.categoryName": {
    "message": "Překlad",
    "description": "Name of extension that adds translate blocks"
  },
  "translate.defaultTextToTranslate": {
    "message": "ahoj",
    "description": "hello: the default text to translate"
  },
  "translate.translateBlock": {
    "message": "přelož [WORDS] do [LANGUAGE]",
    "description": "translate some text to a different language"
  },
  "translate.viewerLanguage": {
    "message": "jazyk",
    "description": "the languge of the project viewer"
  },
  "videoSensing.categoryName": {
    "message": "Vnímání videa",
    "description": "Label for the video sensing extension category"
  },
  "videoSensing.direction": {
    "message": "směr",
    "description": "Attribute for the \"video [ATTRIBUTE] on [SUBJECT]\" block"
  },
  "videoSensing.motion": {
    "message": "pohyb",
    "description": "Attribute for the \"video [ATTRIBUTE] on [SUBJECT]\" block"
  },
  "videoSensing.off": {
    "message": "vypni",
    "description": "Option for the \"turn video [STATE]\" block"
  },
  "videoSensing.on": {
    "message": "zapni",
    "description": "Option for the \"turn video [STATE]\" block"
  },
  "videoSensing.onFlipped": {
    "message": "na převrácené straně",
    "description": "Option for the \"turn video [STATE]\" block that causes the video to be flipped horizontally (reversed as in a mirror)"
  },
  "videoSensing.setVideoTransparency": {
    "message": "nastav průhlednost videa na [TRANSPARENCY]",
    "description": "Controls transparency of the video preview layer"
  },
  "videoSensing.sprite": {
    "message": "postava",
    "description": "Subject for the \"video [ATTRIBUTE] on [SUBJECT]\" block"
  },
  "videoSensing.stage": {
    "message": "scéna",
    "description": "Subject for the \"video [ATTRIBUTE] on [SUBJECT]\" block"
  },
  "videoSensing.videoOn": {
    "message": "video [ATTRIBUTE] na [SUBJECT]",
    "description": "Reporter that returns the amount of [ATTRIBUTE] for the selected [SUBJECT]"
  },
  "videoSensing.videoToggle": {
    "message": "[VIDEO_STATE] video",
    "description": "Controls display of the video preview layer"
  },
  "videoSensing.whenMotionGreaterThan": {
    "message": "při pohybu na videu > [REFERENCE]",
    "description": "Event that triggers when the amount of motion is greater than [REFERENCE]"
  },
  "wedo2.getDistance": {
    "message": "vzdálenost",
    "description": "the value returned by the distance sensor"
  },
  "wedo2.getTiltAngle": {
    "message": "úhel náklonu [TILT_DIRECTION]",
    "description": "the angle returned by the tilt sensor"
  },
  "wedo2.isTilted": {
    "message": "nakloněno [TILT_DIRECTION_ANY]?",
    "description": "whether the tilt sensor is tilted"
  },
  "wedo2.motorDirection.backward": {
    "message": "proti směru hodin",
    "description": "label for backward element in motor direction menu for LEGO WeDo 2 extension"
  },
  "wedo2.motorDirection.forward": {
    "message": "po směru hodin",
    "description": "label for forward element in motor direction menu for LEGO WeDo 2 extension"
  },
  "wedo2.motorDirection.reverse": {
    "message": "pozpátku",
    "description": "label for reverse element in motor direction menu for LEGO WeDo 2 extension"
  },
  "wedo2.motorId.a": {
    "message": "motor A",
    "description": "label for motor A element in motor menu for LEGO WeDo 2 extension"
  },
  "wedo2.motorId.all": {
    "message": "všechny motory",
    "description": "label for all motors element in motor menu for LEGO WeDo 2 extension"
  },
  "wedo2.motorId.b": {
    "message": "motor B",
    "description": "label for motor B element in motor menu for LEGO WeDo 2 extension"
  },
  "wedo2.motorId.default": {
    "message": "motor",
    "description": "label for motor element in motor menu for LEGO WeDo 2 extension"
  },
  "wedo2.motorOff": {
    "message": "vypni [MOTOR_ID]",
    "description": "turn a motor off"
  },
  "wedo2.motorOn": {
    "message": "zapni [MOTOR_ID]",
    "description": "turn a motor on indefinitely"
  },
  "wedo2.motorOnFor": {
    "message": "zapni [MOTOR_ID] na [DURATION] sekund",
    "description": "turn a motor on for some time"
  },
  "wedo2.playNoteFor": {
    "message": "hraj notu [NOTE] příštích [DURATION] sekund",
    "description": "play a certain note for some time"
  },
  "wedo2.setLightHue": {
    "message": "nastav barvu světla na [HUE]",
    "description": "set the LED color"
  },
  "wedo2.setMotorDirection": {
    "message": "nastav [MOTOR_ID] směrem [MOTOR_DIRECTION]",
    "description": "set the motor's turn direction"
  },
  "wedo2.startMotorPower": {
    "message": "pro [MOTOR_ID] nastav rychlost  [POWER]",
    "description": "set the motor's power and turn it on"
  },
  "wedo2.tiltDirection.any": {
    "message": "libovolně",
    "description": "label for any element in tilt direction menu for LEGO WeDo 2 extension"
  },
  "wedo2.tiltDirection.down": {
    "message": "dolů",
    "description": "label for down element in tilt direction menu for LEGO WeDo 2 extension"
  },
  "wedo2.tiltDirection.left": {
    "message": "vlevo",
    "description": "label for left element in tilt direction menu for LEGO WeDo 2 extension"
  },
  "wedo2.tiltDirection.right": {
    "message": "vpravo",
    "description": "label for right element in tilt direction menu for LEGO WeDo 2 extension"
  },
  "wedo2.tiltDirection.up": {
    "message": "nahoru",
    "description": "label for up element in tilt direction menu for LEGO WeDo 2 extension"
  },
  "wedo2.whenDistance": {
    "message": "když vzdálenost [OP] [REFERENCE]",
    "description": "check for when distance is < or > than reference"
  },
  "wedo2.whenTilted": {
    "message": "když nakloněný [TILT_DIRECTION_ANY]",
    "description": "check when tilted in a certain direction"
  }
}
